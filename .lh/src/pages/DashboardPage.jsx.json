{
    "sourceFile": "src/pages/DashboardPage.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1737920285411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1737920310404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,5 +7,141 @@\n //       <UserProfile />\n //       {/* Add other dashboard components */}\n //     </main>\n //   </div>\n-// );\n\\ No newline at end of file\n+// );\n+import { useEffect, useState } from \"react\";\n+import { useDispatch, useSelector } from \"react-redux\";\n+import Table from \"/components/Table\";\n+import DashboardHeader from \"@/components/Dashboard/DashboardHeader\";\n+import DashboardMetrics from \"@/components/Dashboard/DashboardMetrics\";\n+import DashboardCharts from \"@/components/Dashboard/DashboardCharts\";\n+import DashboardBooks from \"@/components/Dashboard/DashboardBooks\";\n+import DashboardQuotes from \"@/components/Dashboard/DashboardQuotes\";\n+import AddBookForm from \"@/components/Dashboard/AddBookForm\";\n+\n+export const DashboardPage = () => {\n+  const dispatch = useDispatch();\n+  const userAuth = useSelector((state) => state.auth);\n+  const [dashboardData, setDashboardData] = useState(null);\n+  const [loading, setLoading] = useState(true);\n+  const [error, setError] = useState(null);\n+  const [showForm, setShowForm] = useState(false);\n+  const [newBook, setNewBook] = useState({\n+    bookName: \"\",\n+    mrp: \"\",\n+    quantityLeft: \"\",\n+    royaltyEarned: \"\",\n+    booksSold: \"\",\n+  });\n+\n+  useEffect(() => {\n+    const fetchDashboardData = async () => {\n+      try {\n+        const response = await fetch(\n+          `${import.meta.env.VITE_URL}/api/dashboard/`,\n+          {\n+            method: \"GET\",\n+            headers: {\n+              \"Content-Type\": \"application/json\",\n+            },\n+            credentials: \"include\",\n+          }\n+        );\n+\n+        if (!response.ok) {\n+          throw new Error(\"Failed to fetch dashboard data\");\n+        }\n+\n+        const data = await response.json();\n+        setDashboardData(data.data);\n+        setLoading(false);\n+      } catch (error) {\n+        console.error(\"Error fetching dashboard data:\", error);\n+        setError(error.message);\n+        setLoading(false);\n+      }\n+    };\n+\n+    fetchDashboardData();\n+  }, [dispatch]);\n+\n+  const handleAddBookClick = () => {\n+    setShowForm(true);\n+  };\n+\n+  const handleFormChange = (e) => {\n+    const { name, value } = e.target;\n+    setNewBook({ ...newBook, [name]: value });\n+  };\n+\n+  const handleFormSubmit = async (e) => {\n+    e.preventDefault();\n+    try {\n+      const response = await fetch(\n+        `${import.meta.env.VITE_URL}/api/admin/dashboardDataById/${\n+          userAuth.user._id\n+        }/books`,\n+        {\n+          method: \"POST\",\n+          headers: {\n+            \"Content-Type\": \"application/json\",\n+          },\n+          body: JSON.stringify({ books: [newBook] }),\n+        }\n+      );\n+\n+      if (!response.ok) {\n+        throw new Error(\"Failed to add book\");\n+      }\n+\n+      const data = await response.json();\n+      setDashboardData(data);\n+      setShowForm(false);\n+      setNewBook({\n+        bookName: \"\",\n+        mrp: \"\",\n+        quantityLeft: \"\",\n+        royaltyEarned: \"\",\n+        booksSold: \"\",\n+      });\n+    } catch (error) {\n+      console.error(\"Error adding book:\", error);\n+    }\n+  };\n+\n+  if (loading) return <div>Loading...</div>;\n+  if (error) return <div>{error}</div>;\n+  if (!dashboardData) return <div>No data available</div>;\n+\n+  const { metrics, charts, orders, books } = dashboardData;\n+\n+  return (\n+    <>\n+      <DashboardHeader userAuth={userAuth} />\n+      <DashboardMetrics metrics={metrics} />\n+      <DashboardCharts charts={charts} />\n+      <DashboardBooks books={books} orders={orders} />\n+      <DashboardQuotes />\n+      <div className=\"px-4\">\n+        <Table books={books} />\n+        <div className=\"flex justify-end items-center mt-4\">\n+          <button\n+            onClick={handleAddBookClick}\n+            className=\"p-2 px-3 bg-orange-500 text-white rounded-lg\"\n+          >\n+            Add Book\n+          </button>\n+        </div>\n+        {showForm && (\n+          <AddBookForm\n+            newBook={newBook}\n+            handleFormChange={handleFormChange}\n+            handleFormSubmit={handleFormSubmit}\n+          />\n+        )}\n+      </div>\n+    </>\n+  );\n+};\n+\n+export default DashboardPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1737920316036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n //   </div>\n // );\n import { useEffect, useState } from \"react\";\n import { useDispatch, useSelector } from \"react-redux\";\n-import Table from \"/components/Table\";\n+import Table from \";\n import DashboardHeader from \"@/components/Dashboard/DashboardHeader\";\n import DashboardMetrics from \"@/components/Dashboard/DashboardMetrics\";\n import DashboardCharts from \"@/components/Dashboard/DashboardCharts\";\n import DashboardBooks from \"@/components/Dashboard/DashboardBooks\";\n"
                },
                {
                    "date": 1737920421971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,10 @@\n //   </div>\n // );\n import { useEffect, useState } from \"react\";\n import { useDispatch, useSelector } from \"react-redux\";\n-import Table from \";\n-import DashboardHeader from \"@/components/Dashboard/DashboardHeader\";\n+import Table from \"@/components/Dashboard/Table\";\n+import DashboardHeader from \"src/components/Dashboard/DashboardHeader.jsx\";\n import DashboardMetrics from \"@/components/Dashboard/DashboardMetrics\";\n import DashboardCharts from \"@/components/Dashboard/DashboardCharts\";\n import DashboardBooks from \"@/components/Dashboard/DashboardBooks\";\n import DashboardQuotes from \"@/components/Dashboard/DashboardQuotes\";\n"
                },
                {
                    "date": 1737920432354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n // );\n import { useEffect, useState } from \"react\";\n import { useDispatch, useSelector } from \"react-redux\";\n import Table from \"@/components/Dashboard/Table\";\n-import DashboardHeader from \"src/components/Dashboard/DashboardHeader.jsx\";\n+import DashboardHeader from \"./\";\n import DashboardMetrics from \"@/components/Dashboard/DashboardMetrics\";\n import DashboardCharts from \"@/components/Dashboard/DashboardCharts\";\n import DashboardBooks from \"@/components/Dashboard/DashboardBooks\";\n import DashboardQuotes from \"@/components/Dashboard/DashboardQuotes\";\n"
                },
                {
                    "date": 1737920437792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n // );\n import { useEffect, useState } from \"react\";\n import { useDispatch, useSelector } from \"react-redux\";\n import Table from \"@/components/Dashboard/Table\";\n-import DashboardHeader from \"./\";\n+import DashboardHeader from \"../components\";\n import DashboardMetrics from \"@/components/Dashboard/DashboardMetrics\";\n import DashboardCharts from \"@/components/Dashboard/DashboardCharts\";\n import DashboardBooks from \"@/components/Dashboard/DashboardBooks\";\n import DashboardQuotes from \"@/components/Dashboard/DashboardQuotes\";\n"
                },
                {
                    "date": 1737920443811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,147 @@\n+// import { UserProfile, DashboardNav } from '../components/dashboard';\n+\n+// export const DashboardPage = () => (\n+//   <div className=\"dashboard-page\">\n+//     <DashboardNav />\n+//     <main>\n+//       <UserProfile />\n+//       {/* Add other dashboard components */}\n+//     </main>\n+//   </div>\n+// );\n+import { useEffect, useState } from \"react\";\n+import { useDispatch, useSelector } from \"react-redux\";\n+import Table from \"@/components/Dashboard/Table\";\n+import DashboardHeader from \"../components/Dashboard/DashboardHeader\";\n+import DashboardMetrics from \"../components/Dashboard/DashboardMetrics\";\n+import DashboardCharts from \"@/components/Dashboard/DashboardCharts\";\n+import DashboardBooks from \"@/components/Dashboard/DashboardBooks\";\n+import DashboardQuotes from \"@/components/Dashboard/DashboardQuotes\";\n+import AddBookForm from \"@/components/Dashboard/AddBookForm\";\n+\n+export const DashboardPage = () => {\n+  const dispatch = useDispatch();\n+  const userAuth = useSelector((state) => state.auth);\n+  const [dashboardData, setDashboardData] = useState(null);\n+  const [loading, setLoading] = useState(true);\n+  const [error, setError] = useState(null);\n+  const [showForm, setShowForm] = useState(false);\n+  const [newBook, setNewBook] = useState({\n+    bookName: \"\",\n+    mrp: \"\",\n+    quantityLeft: \"\",\n+    royaltyEarned: \"\",\n+    booksSold: \"\",\n+  });\n+\n+  useEffect(() => {\n+    const fetchDashboardData = async () => {\n+      try {\n+        const response = await fetch(\n+          `${import.meta.env.VITE_URL}/api/dashboard/`,\n+          {\n+            method: \"GET\",\n+            headers: {\n+              \"Content-Type\": \"application/json\",\n+            },\n+            credentials: \"include\",\n+          }\n+        );\n+\n+        if (!response.ok) {\n+          throw new Error(\"Failed to fetch dashboard data\");\n+        }\n+\n+        const data = await response.json();\n+        setDashboardData(data.data);\n+        setLoading(false);\n+      } catch (error) {\n+        console.error(\"Error fetching dashboard data:\", error);\n+        setError(error.message);\n+        setLoading(false);\n+      }\n+    };\n+\n+    fetchDashboardData();\n+  }, [dispatch]);\n+\n+  const handleAddBookClick = () => {\n+    setShowForm(true);\n+  };\n+\n+  const handleFormChange = (e) => {\n+    const { name, value } = e.target;\n+    setNewBook({ ...newBook, [name]: value });\n+  };\n+\n+  const handleFormSubmit = async (e) => {\n+    e.preventDefault();\n+    try {\n+      const response = await fetch(\n+        `${import.meta.env.VITE_URL}/api/admin/dashboardDataById/${\n+          userAuth.user._id\n+        }/books`,\n+        {\n+          method: \"POST\",\n+          headers: {\n+            \"Content-Type\": \"application/json\",\n+          },\n+          body: JSON.stringify({ books: [newBook] }),\n+        }\n+      );\n+\n+      if (!response.ok) {\n+        throw new Error(\"Failed to add book\");\n+      }\n+\n+      const data = await response.json();\n+      setDashboardData(data);\n+      setShowForm(false);\n+      setNewBook({\n+        bookName: \"\",\n+        mrp: \"\",\n+        quantityLeft: \"\",\n+        royaltyEarned: \"\",\n+        booksSold: \"\",\n+      });\n+    } catch (error) {\n+      console.error(\"Error adding book:\", error);\n+    }\n+  };\n+\n+  if (loading) return <div>Loading...</div>;\n+  if (error) return <div>{error}</div>;\n+  if (!dashboardData) return <div>No data available</div>;\n+\n+  const { metrics, charts, orders, books } = dashboardData;\n+\n+  return (\n+    <>\n+      <DashboardHeader userAuth={userAuth} />\n+      <DashboardMetrics metrics={metrics} />\n+      <DashboardCharts charts={charts} />\n+      <DashboardBooks books={books} orders={orders} />\n+      <DashboardQuotes />\n+      <div className=\"px-4\">\n+        <Table books={books} />\n+        <div className=\"flex justify-end items-center mt-4\">\n+          <button\n+            onClick={handleAddBookClick}\n+            className=\"p-2 px-3 bg-orange-500 text-white rounded-lg\"\n+          >\n+            Add Book\n+          </button>\n+        </div>\n+        {showForm && (\n+          <AddBookForm\n+            newBook={newBook}\n+            handleFormChange={handleFormChange}\n+            handleFormSubmit={handleFormSubmit}\n+          />\n+        )}\n+      </div>\n+    </>\n+  );\n+};\n+\n+export default DashboardPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1737920450011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,12 +13,12 @@\n import { useDispatch, useSelector } from \"react-redux\";\n import Table from \"@/components/Dashboard/Table\";\n import DashboardHeader from \"../components/Dashboard/DashboardHeader\";\n import DashboardMetrics from \"../components/Dashboard/DashboardMetrics\";\n-import DashboardCharts from \"@/components/Dashboard/DashboardCharts\";\n-import DashboardBooks from \"@/components/Dashboard/DashboardBooks\";\n-import DashboardQuotes from \"@/components/Dashboard/DashboardQuotes\";\n-import AddBookForm from \"@/components/Dashboard/AddBookForm\";\n+import DashboardCharts from \"../components/Dashboard/DashboardCharts\";\n+import DashboardBooks from \"../components/Dashboard/DashboardBooks\";\n+import DashboardQuotes from \"../components/Dashboard/DashboardQuotes\";\n+import AddBookForm from \"../components/Dashboard/AddBookForm\";\n \n export const DashboardPage = () => {\n   const dispatch = useDispatch();\n   const userAuth = useSelector((state) => state.auth);\n@@ -143,152 +143,5 @@\n     </>\n   );\n };\n \n-export default DashboardPage;\n-// import { UserProfile, DashboardNav } from '../components/dashboard';\n-\n-// export const DashboardPage = () => (\n-//   <div className=\"dashboard-page\">\n-//     <DashboardNav />\n-//     <main>\n-//       <UserProfile />\n-//       {/* Add other dashboard components */}\n-//     </main>\n-//   </div>\n-// );\n-import { useEffect, useState } from \"react\";\n-import { useDispatch, useSelector } from \"react-redux\";\n-import Table from \"@/components/Dashboard/Table\";\n-import DashboardHeader from \"../components\";\n-import DashboardMetrics from \"@/components/Dashboard/DashboardMetrics\";\n-import DashboardCharts from \"@/components/Dashboard/DashboardCharts\";\n-import DashboardBooks from \"@/components/Dashboard/DashboardBooks\";\n-import DashboardQuotes from \"@/components/Dashboard/DashboardQuotes\";\n-import AddBookForm from \"@/components/Dashboard/AddBookForm\";\n-\n-export const DashboardPage = () => {\n-  const dispatch = useDispatch();\n-  const userAuth = useSelector((state) => state.auth);\n-  const [dashboardData, setDashboardData] = useState(null);\n-  const [loading, setLoading] = useState(true);\n-  const [error, setError] = useState(null);\n-  const [showForm, setShowForm] = useState(false);\n-  const [newBook, setNewBook] = useState({\n-    bookName: \"\",\n-    mrp: \"\",\n-    quantityLeft: \"\",\n-    royaltyEarned: \"\",\n-    booksSold: \"\",\n-  });\n-\n-  useEffect(() => {\n-    const fetchDashboardData = async () => {\n-      try {\n-        const response = await fetch(\n-          `${import.meta.env.VITE_URL}/api/dashboard/`,\n-          {\n-            method: \"GET\",\n-            headers: {\n-              \"Content-Type\": \"application/json\",\n-            },\n-            credentials: \"include\",\n-          }\n-        );\n-\n-        if (!response.ok) {\n-          throw new Error(\"Failed to fetch dashboard data\");\n-        }\n-\n-        const data = await response.json();\n-        setDashboardData(data.data);\n-        setLoading(false);\n-      } catch (error) {\n-        console.error(\"Error fetching dashboard data:\", error);\n-        setError(error.message);\n-        setLoading(false);\n-      }\n-    };\n-\n-    fetchDashboardData();\n-  }, [dispatch]);\n-\n-  const handleAddBookClick = () => {\n-    setShowForm(true);\n-  };\n-\n-  const handleFormChange = (e) => {\n-    const { name, value } = e.target;\n-    setNewBook({ ...newBook, [name]: value });\n-  };\n-\n-  const handleFormSubmit = async (e) => {\n-    e.preventDefault();\n-    try {\n-      const response = await fetch(\n-        `${import.meta.env.VITE_URL}/api/admin/dashboardDataById/${\n-          userAuth.user._id\n-        }/books`,\n-        {\n-          method: \"POST\",\n-          headers: {\n-            \"Content-Type\": \"application/json\",\n-          },\n-          body: JSON.stringify({ books: [newBook] }),\n-        }\n-      );\n-\n-      if (!response.ok) {\n-        throw new Error(\"Failed to add book\");\n-      }\n-\n-      const data = await response.json();\n-      setDashboardData(data);\n-      setShowForm(false);\n-      setNewBook({\n-        bookName: \"\",\n-        mrp: \"\",\n-        quantityLeft: \"\",\n-        royaltyEarned: \"\",\n-        booksSold: \"\",\n-      });\n-    } catch (error) {\n-      console.error(\"Error adding book:\", error);\n-    }\n-  };\n-\n-  if (loading) return <div>Loading...</div>;\n-  if (error) return <div>{error}</div>;\n-  if (!dashboardData) return <div>No data available</div>;\n-\n-  const { metrics, charts, orders, books } = dashboardData;\n-\n-  return (\n-    <>\n-      <DashboardHeader userAuth={userAuth} />\n-      <DashboardMetrics metrics={metrics} />\n-      <DashboardCharts charts={charts} />\n-      <DashboardBooks books={books} orders={orders} />\n-      <DashboardQuotes />\n-      <div className=\"px-4\">\n-        <Table books={books} />\n-        <div className=\"flex justify-end items-center mt-4\">\n-          <button\n-            onClick={handleAddBookClick}\n-            className=\"p-2 px-3 bg-orange-500 text-white rounded-lg\"\n-          >\n-            Add Book\n-          </button>\n-        </div>\n-        {showForm && (\n-          <AddBookForm\n-            newBook={newBook}\n-            handleFormChange={handleFormChange}\n-            handleFormSubmit={handleFormSubmit}\n-          />\n-        )}\n-      </div>\n-    </>\n-  );\n-};\n-\n export default DashboardPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1737920583412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n //   </div>\n // );\n import { useEffect, useState } from \"react\";\n import { useDispatch, useSelector } from \"react-redux\";\n-import Table from \"@/components/Dashboard/Table\";\n+import Table from \"../components/Dashboard/Table\";\n import DashboardHeader from \"../components/Dashboard/DashboardHeader\";\n import DashboardMetrics from \"../components/Dashboard/DashboardMetrics\";\n import DashboardCharts from \"../components/Dashboard/DashboardCharts\";\n import DashboardBooks from \"../components/Dashboard/DashboardBooks\";\n"
                }
            ],
            "date": 1737920285411,
            "name": "Commit-0",
            "content": "// import { UserProfile, DashboardNav } from '../components/dashboard';\n\n// export const DashboardPage = () => (\n//   <div className=\"dashboard-page\">\n//     <DashboardNav />\n//     <main>\n//       <UserProfile />\n//       {/* Add other dashboard components */}\n//     </main>\n//   </div>\n// );"
        }
    ]
}